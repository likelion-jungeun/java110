package bitcamp.java110.cms.dao.impl;

import java.sql.Connection;

import java.sql.DriverManager;

import java.sql.ResultSet;

import java.sql.Statement;

import java.util.ArrayList;

import java.util.List;

import bitcamp.java110.cms.annotation.Component;

import bitcamp.java110.cms.dao.DAOException;

import bitcamp.java110.cms.dao.StudentDAO;

import bitcamp.java110.cms.domain.Student;

@Component

public class StudentJdbcDAO implements StudentDAO {

    public int insert(Student student) {

        Connection con = null;

        Statement stmt = null;

        try {

            Class.forName("org.mariadb.jdbc.Driver");

            con = DriverManager.getConnection(

                    "jdbc:mariadb://localhost:3306/studydb"

                    , "study"

                    , "1111");

            con.setAutoCommit(false);

            stmt = con.createStatement();

            String sql = "insert into p1_memb(name,email,pwd,tel,cdt)"

                    + " values('" + student.getName()

                    + "','" + student.getEmail()

                    + "',password('" + student.getPassword()

                    + "'),'" + student.getTel()

                    + "',now())";

            stmt.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);

            ResultSet autogeneratedKeys = stmt.getGeneratedKeys();

            autogeneratedKeys.next();

            int memberNo = autogeneratedKeys.getInt(1);

            autogeneratedKeys.close();

            String sql2 = "insert into p1_stud(sno,schl,work)"

                    + " values(" + memberNo

                    + ",'" + student.getSchool()

                    + "','" + (student.isWorking() ? "Y" : "N")

                    + "')";

            stmt.executeUpdate(sql2);

            con.commit();

            return 1;

        } catch (Exception e) {

            throw new DAOException(e);

        } finally {

            try {
                stmt.close();
            } catch (Exception e) {
            }

            try {
                con.close();
            } catch (Exception e) {
            }

        }

    }

    public List<Student> findAll() {

        ArrayList<Student> list = new ArrayList<>();

        Connection con = null;

        Statement stmt = null;

        ResultSet rs = null;

        try {

            Class.forName("org.mariadb.jdbc.Driver");

            con = DriverManager.getConnection(

                    "jdbc:mariadb://localhost:3306/studydb"

                    , "study"

                    , "1111");

            stmt = con.createStatement();

            rs = stmt.executeQuery("select" +

                    " m.mno," +

                    " m.name," +

                    " m.tel, " +

                    " m.email," +

                    " s.schl," +

                    " s.work" +

                    " from p1_stud s" +

                    " inner join p1_memb m on s.sno = m.mno ");

            while (rs.next()) {

                Student stud = new Student();

                stud.setNo(rs.getInt("mno"));

                stud.setTel(rs.getString("tel"));

                stud.setEmail(rs.getString("email"));

                stud.setName(rs.getString("name"));

                stud.setSchool(rs.getString("schl"));

                if (rs.getString("work").equals("Y"))
                    stud.setWorking(true);

                else
                    stud.setWorking(false);

                list.add(stud);

            }

        } catch (Exception e) {

            throw new DAOException(e);

        } finally {

            try {
                rs.close();
            } catch (Exception e) {
            }

            try {
                stmt.close();
            } catch (Exception e) {
            }

            try {
                con.close();
            } catch (Exception e) {
            }

        }

        return list;

    }

    public Student findByEmail(String email) {

        Connection con = null;

        Statement stmt = null;

        ResultSet rs = null;

        try {

            Class.forName("org.mariadb.jdbc.Driver");

            con = DriverManager.getConnection(

                    "jdbc:mariadb://localhost:3306/studydb",

                    "study", "1111");

            stmt = con.createStatement();

            rs = stmt.executeQuery(

                    "select" +

                            " m.mno," +

                            " m.name," +

                            " m.email," +

                            " m.tel," +

                            " s.schl," +

                            " s.work" +

                            " from p1_stud s" +

                            " inner join p1_memb m on s.sno = m.mno" +

                            " where m.email='" + email + "'");

            if (rs.next()) {

                Student stud = new Student();

                stud.setNo(rs.getInt("mno"));

                stud.setTel(rs.getString("tel"));

                stud.setEmail(rs.getString("email"));

                stud.setName(rs.getString("name"));

                stud.setSchool(rs.getString("schl"));

                if (rs.getString("work").equals("Y"))
                    stud.setWorking(true);

                else
                    stud.setWorking(false);

                return stud;

            }

            return null;

        } catch (Exception e) {

            throw new DAOException(e);

        } finally {

            try {
                rs.close();
            } catch (Exception e) {
            }

            try {
                stmt.close();
            } catch (Exception e) {
            }

            try {
                con.close();
            } catch (Exception e) {
            }

        }

    }

    public Student findByNo(int no) {

        Connection con = null;

        Statement stmt = null;

        ResultSet rs = null;

        try {

            Class.forName("org.mariadb.jdbc.Driver");

            con = DriverManager.getConnection(

                    "jdbc:mariadb://localhost:3306/studydb",

                    "study", "1111");

            stmt = con.createStatement();

            rs = stmt.executeQuery(

                    "select" +

                            " m.mno," +

                            " m.name," +

                            " m.email," +

                            " m.tel," +

                            " s.schl," +

                            " s.work" +

                            " from p1_stud s" +

                            " inner join p1_memb m on s.sno = m.mno" +

                            " where m.mno=" + no);

            if (rs.next()) {

                Student stud = new Student();

                stud.setNo(rs.getInt("mno"));

                stud.setTel(rs.getString("tel"));

                stud.setEmail(rs.getString("email"));

                stud.setName(rs.getString("name"));

                stud.setSchool(rs.getString("schl"));

                if (rs.getString("work").equals("Y"))
                    stud.setWorking(true);

                else
                    stud.setWorking(false);

                return stud;

            }

            return null;

        } catch (Exception e) {

            throw new DAOException(e);

        } finally {

            try {
                rs.close();
            } catch (Exception e) {
            }

            try {
                stmt.close();
            } catch (Exception e) {
            }

            try {
                con.close();
            } catch (Exception e) {
            }

        }

    }

    public int deleteByNo(int no) {

        Connection con = null;

        Statement stmt = null;

        try {

            Class.forName("org.mariadb.jdbc.Driver");

            con = DriverManager.getConnection(

                    "jdbc:mariadb://localhost:3306/studydb",

                    "study", "1111");

            con.setAutoCommit(false);

            stmt = con.createStatement();

            String sql = "delete from p1_stud where sno=" + no;

            int count = stmt.executeUpdate(sql);

            if (count == 0)

                return 0;

            String sql2 = "delete from p1_memb where mno=" + no;

            stmt.executeUpdate(sql2);

            con.commit();

            return 1;

        } catch (Exception e) {

            throw new DAOException(e);

        } finally {

            try {
                stmt.close();
            } catch (Exception e) {
            }

            try {
                con.close();
            } catch (Exception e) {
            }

        }

    }

}